% COGL: Coefficient graph laplacians for optimized JPEG image decoding
% Authors: Sean I. Young, Aous Naman, and David Taubman
% School of Electrical Engineering & Telecommunications, UNSW
% Contact: sean.young@unsw.edu.au
%   
% Copyright 2010-2019 UNSW, Sydney, NSW.
% 
%                         All Rights Reserved
% 
% Permission to use, copy, modify, and distribute this software and
% its documentation for any purpose other than its incorporation into
% a commercial product is hereby granted without fee, provided that
% the above copyright notice appear in all copies and that both that
% copyright notice and this permission notice appear in supporting
% documentation, and that the name of UNSW not be used in advertising
% or publicity pertaining to distribution of the software without
% specific, written prior permission.
% 
% UNSW DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
% INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
% ANY PARTICULAR PURPOSE.  IN NO EVENT SHALL UNSW BE LIABLE FOR ANY
% SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
% RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
% CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
% CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


1. BUILD MEX FILES
At the matlab prompt, type

>> make

to make the mex executables. You will need to have the libjpeg library
to build jpeg_read.c. Contact MATLAB and/or the supplier of your c/c++
compiler for help with compiler-related issues.


2. RUN THE PROGRAM
At the matlab prompt, type

>> graphmain

to run the COGL decoding algorithm on the cameraman image (included
with the source). The code has been tested under MATLAB R2018B.
